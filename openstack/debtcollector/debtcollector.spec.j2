{% set pypi_name = 'debtcollector' %}
{% set upstream_version = upstream_version('2.0.0') %}
{% set rpm_release = '1' %}
{% set source = url_pypi() %}

Name:           {{ py2name() }}
Version:        {{ py2rpmversion() }}
Release:        {{ py2rpmrelease() }}
Summary:        A collection of Python deprecation patterns and strategies
License:        {{ license('Apache-2.0') }}
Group:          Development/Languages/Python
URL:            https://docs.openstack.org/developer/debtcollector/
Source0:        {{ source }}
BuildRequires:  openstack-macros
BuildRequires:  {{ py2pkg('fixtures', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('funcsigs', py_versions=['py2']) }}
BuildRequires:  {{ py2pkg('pbr', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('python-subunit', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('setuptools', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('stestr', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('wrapt', py_versions=['py2', 'py3']) }}
Requires:       {{ py2pkg('pbr') }}
Requires:       {{ py2pkg('six') }}
Requires:       {{ py2pkg('wrapt') }}
BuildArch:      noarch
%ifpython2
Requires:       {{ py2pkg('funcsigs') }}
%endif
%python_subpackages

%description
A collection of Python deprecation patterns and strategies that help
you collect your technical debt in a non-destructive manner. The goal
of this library is to provide well documented developer facing
deprecation patterns that start of with a basic set and can expand
into a larger set of patterns as time goes on. The desired output of
these patterns is to apply the warnings module to emit
DeprecationWarning or PendingDeprecationWarning or similar derivative
to developers using libraries (or potentially applications) about
future deprecations.

%package -n python-debtcollector-doc
Summary:        Documentation for %{name}
Group:          Documentation/HTML
BuildRequires:  {{ py3('Sphinx') }}
BuildRequires:  {{ py3('openstackdocstheme') }}

%description -n python-debtcollector-doc
A collection of Python deprecation patterns and strategies that help
you collect your technical debt in a non-destructive manner. The goal
of this library is to provide well documented developer facing
deprecation patterns that start of with a basic set and can expand
into a larger set of patterns as time goes on. The desired output of
these patterns is to apply the warnings module to emit
DeprecationWarning or PendingDeprecationWarning or similar derivative
to developers using libraries (or potentially applications) about
future deprecations.

This package contains documentation in HTML format.

%prep
%autosetup -p1 -n {{pypi_name}}-{{ upstream_version }}
%py_req_cleanup

%build
%python_build

# generate html doc
PBR_VERSION={{ upstream_version }} %sphinx_build -b html doc/source doc/build/html
# remove the Sphinx-build leftovers
rm -rf doc/build/html/.{doctrees,buildinfo}

%check
%python_exec -m stestr.cli run

%install
%python_install

%files %{python_files}
%license LICENSE
%doc README.rst
%{python_sitelib}/{{ pypi_name }}
%{python_sitelib}/{{ pypi_name }}-*.egg-info

%files -n python-debtcollector-doc
%license LICENSE
%doc doc/build/html

%changelog
